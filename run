#!/bin/bash

echo "Installing Tilede"

# go to home dir
cd

# install git
sudo apt install -y git

# clone git repo
git clone https://github.com/STiiiXx/Tilede

####################################
# install required packages #
####################################

sudo apt update --upgrade
sudo apt install -y build-essential make
sudo apt install -y xorg i3 i3blocks xdg-utils
sudo apt install -y imagemagick
sudo apt install -y feh
sudo apt install -y pulseaudio pavucontrol
#sudo apt install -y wicd
sudo apt install -y lightdm
sudo apt install -y jq
sudo apt install -y compton
sudo apt install -y zip unzip p7zip
sudo apt install -y libnotify4 libnotify-bin
sudo apt install -y redshift
sudo apt install -y udisks2 udiskie
sudo apt install -y clipit
sudo apt install -y xclip
sudo apt install -y gksu
sudo apt install -y cups
sudo apt install -y xbacklight

# install dunst
cd
git clone --branch v1.3.1 https://github.com/dunst-project/dunst/
cd dunst
sudo apt install -y libxdg-basedir-dev libxinerama-dev libxss-dev librsvg2-dev
make
sudo make install
cd
rm -rf dunst

# install backlight support
sudo touch /etc/X11/xorg.conf
sudo echo 'Section "Device"
    Identifier  "0x43"
    Driver      "intel"
    Option      "Backlight"  "intel_backlight"
EndSection' | sudo tee -a /etc/X11/xorg.conf

# install i3-gaps
sudo apt install -y libxcb1-dev libxcb-keysyms1-dev libpango1.0-dev libxcb-util0-dev libxcb-icccm4-dev libyajl-dev libstartup-notification0-dev libxcb-randr0-dev libev-dev libxcb-cursor-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev autoconf libxcb-xrm0 libxcb-xrm-dev automake
cd
git clone https://github.com/Airblader/i3 i3-gaps
cd i3-gaps
autoreconf --force --install
rm -rf build/
mkdir -p build && cd build/
../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers
make
sudo make install
cd
rm -rf i3-gaps

# install i3lock-color
#cd
#sudo apt-get install -y pkg-config libxcb1 libpam-dev libcairo-dev libxcb-composite0 libxcb-composite0-dev libxcb-xinerama0-dev libev-dev libx11-dev libx11-xcb-dev libxkbcommon0 libxkbcommon-x11-0 libxcb-dpms0-dev libxcb-image0-dev libxcb-util0-dev libxcb-xkb-dev libxkbcommon-x11-dev libxkbcommon-dev libjpeg-turbo8 libjpeg-turbo8-dev
#git clone https://github.com/PandorasFox/i3lock-color
#cd i3lock-color
#autoreconf -i && ./configure && make
#cd
#rm -rf i3lock-color

# polybar (commented out is the building from source way)
sudo apt install -y cmake cmake-data libcairo2-dev libxcb1-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-randr0-dev libxcb-util0-dev libxcb-xkb-dev pkg-config python-xcbgen libxcb-xrm-dev i3-wm libasound2-dev libmpdclient-dev libiw-dev libcurl4-openssl-dev libxcb-cursor-dev
cd
echo "deb http://archive.getdeb.net/ubuntu zesty-getdeb apps" | sudo tee -a /etc/apt/sources.list
wget -q -O- http://archive.getdeb.net/getdeb-archive.key | sudo apt-key add -
sudo apt update
sudo apt install -y polybar
#install xcb-proto
#cd
#wget https://launchpad.net/ubuntu/+archive/primary/+files/xcb-proto_1.11.orig.tar.gz
#tar xfz xcb-proto_1.11.orig.tar.gz
#wget https://launchpadlibrarian.net/223243136/xcb-proto_1.11-1.diff.gz
#gzip -d xcb-proto_1.11-1.diff.gz
#cd xcb-proto-1.11
#patch -p1 <../xcb-proto_1.11-1.diff
#./configure
#make
#sudo make install
#cd
#rm -rf xcb-proto-1.11
#rm xcb-proto_1.11.orig.tar.gz
#rm xcb-proto_1.11-1.diff.gz
#rm xcb-proto_1.11-1.diff
#install polybar
#git clone https://github.com/jaagr/polybar
#cd polybar
#./build.sh
#rm -rf ~/polybar/

# GTK-3.0
# install gtk-3.0 icon theme (Papirus)
sudo apt install -y software-properties-common
sudo add-apt-repository -y -u ppa:papirus/papirus
sudo apt-get install -y papirus-icon-theme
# install gtk-3.0 theme (Arc-Dark)
sudo cp -r ~/Tilede/gtk/gtk3/Arc-Dark /usr/share/themes/Arc-Dark/
# install gtk-3.0 cursor theme (OpenZone_White)
sudo cp -r ~/Tilede/gtk/gtk3/OpenZone_White /usr/share/icons/
sudo cp ~/Tilede/gtk/gtk3/index.theme /usr/share/icons/default/index.theme

# install rxvt-unicode (terminal emulator - not supported natively)
#sudo apt install -y rxvt-unicode

# install termite (terminal emulator)
cd
sudo apt install -y g++ libgtk-3-dev gtk-doc-tools gnutls-bin valac intltool libpcre2-dev libglib3.0-cil-dev libgnutls28-dev libgirepository1.0-dev libxml2-utils gperf build-essential
wget https://github.com/thestinger/vte-ng/archive/0.50.2.a.zip
unzip 0.50.2.a.zip
git clone --branch v13 --recursive https://github.com/thestinger/termite
echo export LIBRARY_PATH="/usr/include/gtk-3.0:$LIBRARY_PATH"
cd vte-ng-0.50.2.a/ && ./autogen.sh && make && sudo make install 
cd
cd termite && make && sudo make install
sudo ldconfig
sudo mkdir -p /lib/terminfo/x
sudo ln -s /usr/local/share/terminfo/x/xterm-termite /lib/terminfo/x/xterm-termite
rm -rf ~/vte-ng-0.50.2.a/ ~/termite/ ~/0.50.2.a.zip
mkdir -p ~/.config/termite/
cd

# install python modules
sudo apt install -y python-pip
sudo apt install -y python3-pip

pip install requests
pip install psutil
pip install netifaces
pip install power
sudo apt install -y python-gi python-gi-cairo python3-gi python3-gi-cairo gir1.2-gtk-3.0 gir1.2-gtksource-3.0

# install rofi
cd
# deps
sudo apt install -y libbison-dev flex libsubunit-dev libsubunit0
wget https://github.com/libcheck/check/releases/download/0.12.0/check-0.12.0.tar.gz -O check.tar.gz
tar xf check.tar.xz
cd check-0.12.0/
./configure
make
sudo make install
cd
# install
wget -c https://github.com/DaveDavenport/rofi/releases/download/1.5.0/rofi-1.5.0.tar.gz
tar xf rofi-1.5.0.tar.gz
cd rofi-1.5.0/
autoreconf -i
./configure
make
sudo make install
cd

# network manager openvpn
sudo apt install -y network-manager-openvpn
sudo apt-get install network-manager-openvpn-gnome

#############################
# install optional packages #
#############################

# calculator
sudo apt install -y gnome-calculator

# install calibre (for ebook readers)
sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.py | sudo python -c "import sys; main=lambda:sys.stderr.write('Download failed\n'); exec(sys.stdin.read()); main()"

# install neovim (nvim)
sudo apt install neovim
mkdir -p ~/.vim
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
cp ~/Tilede/.vim/.ycm_extra_conf.py ~/.vim
nvim -c PluginInstall -c qa

# install hplip
cd
wget "https://downloads.sourceforge.net/project/hplip/hplip/3.17.11/hplip-3.17.11.run?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fhplip%2Ffiles%2Fhplip%2F3.17.11%2Fhplip-3.17.11.run%2Fdownload%3Fuse_mirror%3Dnchc&ts=1518793450" -O hplip.run
chmod +x hplip.run
./hplip.run
cd hplip-3.17.11/
./configure --with-hpppddir=/usr/share/ppd/HP --libdir=/usr/lib --prefix=/usr --enable-qt4 --disable-qt5 --enable-doc-build --disable-cups-ppd-install --disable-foomatic-drv-install --disable-libusb01_build --disable-foomatic-ppd-install --disable-hpijs-install --disable-class-driver --disable-udev_sysfs_rules --disable-policykit --enable-cups-drv-install --enable-hpcups-install --disable-network-build --enable-dbus-build --enable-scan-build --enable-fax-build --enable-apparmor_build
make
sudo make install
cd

# install MS-fonts (Arial, Courier, Comic Sans, ...)
sudo apt-get install -y ttf-mscorefonts-installer

# spell-check German (de)
sudo apt-get install aspell-de

# install language packs
#sudo apt-get install $(check-language-support -l de)

# document / pdf reader
sudo apt install -y evince

# bluetooth support
sudo apt install -y blueman pulseaudio-module-bluetooth

# spotify
#sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys BBEBDCB318AD50EC6865090613B00F1FD2C19886 0DF731E45CE24F27EEEB1450EFDC8610341D9410
#sudo echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list
#sudo apt-get update
#sudo apt-get install -y spotify-client

# mpd / ncmpcpp
sudo apt install -y mpd mpc
sudo apt install -y ncmpcpp

# evolution mail client
sudo apt install -y evolution

# geany
#sudo apt install -y geany

# ranger (file manager command-line)
#sudo apt install -y ranger

# nautilus (file manager gui)
sudo apt install -y nautilus

# firefox
sudo apt install -y firefox
# fix firefox changing dark input fields
mkdir -p ~/.mozilla/firefox/*.default/chrome/
cp ~/Tilede/firefox/userContent.css ~/.mozilla/firefox/*.default/chrome/userContent.css

# zsh
sudo apt install -y zsh

# scrot (commandline image viewer and screenshot-app)
sudo apt install -y scrot

# atom editor
cd
sudo apt install -y gvfs-bin
wget https://atom.io/download/deb
sudo dpkg -i deb
rm deb

# conky
sudo apt install -y conky

# gimp
#sudo apt install -y gimp

# libreoffice
#sudo apt install -y libreoffice

# Dropbox
#cd ~ && wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -

#############################
# configuration of programs #
#############################

# setup ssh
mkdir -p ~/.ssh/
cp ~/Tilede/ssh/config ~/.ssh/

# install fonts
sudo cp -r ~/Tilede/fonts/* /usr/share/fonts/

# install config files
cp -r ~/Tilede/.config/ ~

# mpd / ncmpcpp config
cp -r ~/Tilede/.mpd/ ~
cp -r ~/Tilede/.ncmpcpp/ ~

# set default session to i3
cd /usr/share/lightdm/lightdm.conf.d/
sudo touch 50-myconfig.conf
sudo chown $USER:$USER 50-myconfig.conf
sudo echo "[SeatDefaults]" >> 50-myconfig.conf
sudo echo "user-session=i3" >> 50-myconfig.conf
cd
# create i3 badge for lightdm (unneccessary)
sudo cp ~/Tilede/gtk/lightdm/unknown_badge.png /usr/share/unity-greeter/

# if zsh is installed: install oh-my-zsh
sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
cp ~/Tilede/zsh/.zshrc ~

# if mpd / ncmpcpp is installed
echo "Icon=deepin-music" | sudo tee -a /usr/share/applications/ncmpcpp.desktop
mkdir -p ~/.mpd/playlists/

# set git password cache (store password for 1h)
git config --global credential.helper cache
git config --global credential.helper 'cache --timeout=3600'
git config --global user.email robin_luley@web.de
git config --global user.name STiiixx
cd

# create dirs
mkdir -p ~/Bilder/Screenshots/
mkdir -p ~/Bilder/Backgrounds/
cp ~/Tilede/pictures/bg.jpg ~/Bilder/Backgrounds/
sudo cp ~/Tilede/pictures/bg.jpg /etc/bg.jpg
mkdir -p ~/Dokumente/Studium/
mkdir -p ~/Dokumente/Arbeit/
mkdir -p ~/Dokumente/Scans/

# delete unneccesary folders
rm -r ~/Podcasts/
rm -r ~/Audiobooks/
rm -r ~/Öffentlich/
rm -r ~/Desktop/

# creating mount folder
sudo mkdir -p /media/$USER

# install GTK-3.0 settings file
sudo cp ~/Tilede/gtk/gtk3/settings.ini /etc/gtk-3.0/settings.ini

# install GTK-2.0 settings file
cp ~/Tilede/gtk/gtk2/.gtkrc-2.0 ~/.gtkrc-2.0

# update gtk themes
gsettings set org.gnome.desktop.interface gtk-theme Arc-Dark
gsettings set org.gnome.desktop.wm.preferences theme Arc-Dark
gsettings set org.gnome.desktop.interface icon-theme Papirus

# install wicd icon theme
#sudo cp -r ~/Tilede/gtk/gtk3/wicd-pale/ /usr/share/wicd/icons/

# install gtk-greeter
sudo apt remove --purge -y unity-greeter
sudo apt install -y lightdm-gtk-greeter
sudo cp ~/Tilede/gtk/lightdm/lightdm-gtk-greeter.conf /etc/lightdm

#done
echo "Done. Rebooting now"
sleep 2
exec sudo reboot
